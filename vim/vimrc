"General Settings
set cindent
set cinoptions=g0
set directory=$HOME/.vimbackup
set smartindent
set title
set mouse=a

"Language Settings
set encoding=utf8
set hlg=ja

"Edit Settings
set tabstop=2
set shiftwidth=2
set expandtab     "replace tab to spaces
set showmatch     "auto complete )
set matchtime=1   "wait time for showmatch
set backspace=indent,eol,start
set virtualedit=block

"Display Settings
set number
set list
set ruler
set nowrap
set shellslash

"Search Settings
set hlsearch       "enable highligt
set incsearch      "enable incremental search
set smartcase      "enable smart case
set grepprg=grep\ -nH\ $*

"Plugin Settings
filetype on
filetype plugin on
filetype plugin indent on
filetype indent on
syntax on

"Color Scheme
colorscheme desert

"Key Mappings
noremap r :redo<CR>

"split like tmux
noremap <C-w>% :vsp<CR>
noremap <C-w>" :sp<CR>
noremap <C-w>p :tabp<CR>
noremap <C-w>n :tabn<CR>
noremap <C-w>c :tabnew<CR>

au BufNewFile *.js set ft=javascript
au BufReadPost,BufNewFile,BufRead *.tex,*.latex,*.sty,*.dtx,*.ltx,*.bbl :set filetype=tex
au BufReadPost,BufNewFile,BufRead *.coffee :set filetype=coffee
au BufReadPost,BufNewFile *.t :setl filetype=perl
au BufReadPost,BufNewFile *.tt :set filetype=tt2html

source <sfile>:h/.vim/neobundles.vim

"NERDTree Settings
function! ToggleNAEDTree()
  let current = expand('%:p')
  execute printf(':NERDTreeToggle %s', current)
endfunction
noremap <C-n>t :call ToggleNAEDTree()<CR>  "toggle NERDTree display
let NERDTreeShowHidden = 1            "show dotfiles on NERDTree

"Quickrun Settings
silent! nmap <unique> <C-r> <Plug>(quickrun)
let g:loaded_quicklaunch = 1
let g:quickrun_config = {}
let g:quickrun_config._ = {
\ 'split': '{"rightbelow 10sp"}'
\}
"Gist.vim Settings
let g:gist_privates = 1
let g:gist_show_privates = 1

"Ref.vim
let g:ref_alc_start_linenumber = 10
let g:ref_alc_encoding = 'EUC-JP'

"neocomplcache Settings
let g:neocomplcache_enable_at_startup = 1

"errormarker.vim Settings
let g:errormarker_errortext = '!!'
let g:errormarker_warningtext = '??'
let g:errormarker_errorgroup = 'Error'
let g:errormarker_warninggroup = 'Todo'
highlight Error ctermbg=52 guibg=#5F0000
highlight Todo ctermbg=17 guibg=#00005F

"Gundo.vim Settings
noremap U :<C-u>GundoToggle<CR>

"Load local Settings
source $HOME/.vimrc_local
