[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim', 'vim-quickrun']

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
branch = 'next'
build = 'bash install.sh'
hook_add = '''
let g:LanguageClient_serverCommands = {
      \ 'rust': ['~/.cargo/bin/rustup', 'run', 'stable', 'rls'],
      \ 'swift': ['~/.bin/sourcekit-lsp'],
      \ }
let g:LanguageClient_diagnosticsDisplay = {
  \1: {'name': 'Error', 'texthl': 'ALEError', 'signText': '!', 'signTexthl': 'ALEErrorSign',},
  \2: {'name': 'Warning', 'texthl': 'ALEWarning', 'signText': 'W', 'signTexthl': 'ALEWarningSign',},
  \3: {'name': 'Information', 'texthl': 'ALEInfo', 'signText': 'i', 'signTexthl': 'ALEInfoSign',},
  \4: {'name': 'Hint', 'texthl': 'ALEInfo', 'signText': '>', 'signTexthl': 'ALEInfoSign',},
\}
nnoremap <buffer> <silent> K :call LanguageClient#textDocument_hover()<CR>
nnoremap <buffer> <silent> gd :call LanguageClient#textDocument_definition()<CR>
autocmd User LanguageClientStarted setlocal signcolumn=yes
autocmd User LanguageClientStopped setlocal signcolumn=auto
'''

# for Ruby
[[plugins]]
repo = 'tpope/vim-bundler'

# for Swift
[[plugins]]
repo = 'keith/swift.vim'
hook_source = '''
  let g:syntastic_swift_checkers = ['swiftpm', 'swiftlint']
'''
[[plugins]]
repo = 'apple/swift'
rtp = 'utils/vim'

# for Groovy
[[plugins]]
repo = 'tfnico/vim-gradle'

# for TOML
[[plugins]]
repo = 'cespare/vim-toml'

# for JSON
[[plugins]]
repo = 'elzr/vim-json'
hook_add = '''
  let g:vim_json_syntax_conceal = 0
'''

# for tmux.conf
[[plugins]]
repo = 'tmux-plugins/vim-tmux'

# for Dockerfile
[[plugins]]
repo = 'ekalinin/dockerfile.vim'

# for Jsonnet
[[plugins]]
repo = 'google/vim-jsonnet'

# for modulemap
[[plugins]]
repo = 'compnerd/modulemap-vim'

# for xcconfig
[[plugins]]
repo = 'keith/xcconfig.vim'

# for Rust
[[plugins]]
repo = 'rust-lang/rust.vim'
