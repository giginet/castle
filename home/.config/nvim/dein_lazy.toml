[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'thinca/vim-quickrun'
on_map = ['<Plug>(quickrun)']
depends = ['vimproc.vim']
hook_add = '''
  let g:loaded_quicklaunch = 1
  let g:quickrun_config = get(g:, 'quickrun_config', {})
  let g:quickrun_config = {
      \ "*": {"runner": "vimproc"},
      \ }
  let g:quickrun_config.markdown = {
        \ 'outputter' : 'null',
        \ 'command'   : 'open',
        \ 'cmdopt'    : '-a',
        \ 'args'      : 'Marked\ 2',
        \ 'exec'      : '%c %o %a %s',
        \ }
  let g:quickrun_config.swift = {
        \ 'exec' : '/usr/bin/xcrun swift %s'
        \ }
  let g:quickrun_config.plantuml = {
        \ 'outputter' : 'null',
        \ 'cmdopt'    : '-tpng',
        \ 'command'   : 'plantuml',
        \ 'exec'      : '%c %o %s; open *.png',
        \ }
  let g:quickrun_config.rust = {
        \ 'exec' : 'cargo run'
        \ }
  silent! nmap <unique> <C-x><C-x> <Plug>(quickrun)
'''

# for markdown
[[plugins]]
repo = 'godlygeek/tabular'

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown']
depends = 'tabular'
hook_add = '''
  let g:vim_markdown_folding_disabled = 1
'''

[[plugins]] 
repo = "Shougo/denite.nvim"
on_cmd = ['Denite']
hook_add = '''
nnoremap <C-o> :Denite file/rec<CR>
autocmd FileType denite call s:denite_my_settings()
function! s:denite_my_settings() abort
  nnoremap <silent><buffer><expr> <CR>
        \ denite#do_map('do_action')
  nnoremap <silent><buffer><expr> d
        \ denite#do_map('do_action', 'delete')
  nnoremap <silent><buffer><expr> p
        \ denite#do_map('do_action', 'preview')
  nnoremap <silent><buffer><expr> q
        \ denite#do_map('quit')
  nnoremap <silent><buffer><expr> i
        \ denite#do_map('open_filter_buffer')
  nnoremap <silent><buffer><expr> <Space>
        \ denite#do_map('toggle_select').'j'
endfunction
let s:denite_win_width_percent = 0.85
let s:denite_win_height_percent = 0.7
let s:denite_default_options = {
    \ 'split': 'floating',
    \ 'winwidth': float2nr(&columns * s:denite_win_width_percent),
    \ 'wincol': float2nr((&columns - (&columns * s:denite_win_width_percent)) / 2),
    \ 'winheight': float2nr(&lines * s:denite_win_height_percent),
    \ 'winrow': float2nr((&lines - (&lines * s:denite_win_height_percent)) / 2),
    \ 'highlight_filter_background': 'DeniteFilter',
    \ 'prompt': '$ ',
    \ 'start_filter': v:true,
    \ }
'''
hook_source = '''
call denite#custom#filter('matcher/ignore_globs', 'ignore_globs', 
  \ [ '.git/', '.DS_Store', '.build/', '.venv/'])
call deoplete#disable()
'''

[[plugins]]
repo = 'tyru/open-browser-github.vim'
depends = 'open-browser.vim'
on_cmd = ['OpenGithubFile', 'OpenGithubIssue', 'OpenGithubPullReq', 'OpenGithubProject']
hook_add = '''
noremap <silent> <C-g>o :execute line(".") . "OpenGithubFile"<CR>
vnoremap <silent> <C-g>o :'<,'>OpenGithubFile<CR>
let g:openbrowser_github_always_use_commit_hash=0
let g:openbrowser_github_url_exists_check="no"

'''

[[plugins]]
repo = "lambdalisue/vim-gista"
on_cmd = ['Gista']
on_map = ['<Plug>(gista-']
hook_add = '''
  let g:gista#client#use_git_config_github_username = 1
'''

[[plugins]]
repo = 'vim-scripts/tComment'
on_map = ['<C-_><C-_>']

[[plugins]]
repo = 'scrooloose/nerdtree'
on_cmd = ['NERDTreeToggle']
hook_add = '''
let NERDTreeShowHidden=1
let NERDTreeIgnore=['\.vim$', '\.git$', '\.DS_Store']
'''

[[plugins]]
repo = 'iberianpig/tig-explorer.vim'
depends = 'blose.vim'
on_cmd = ['TigOpenCurrentFile', 'TigOpenProjectRootDir', 'TigGrep', 'TigGrepResume', 'TigBlame']
hook_add = '''
nnoremap <C-g> :TigOpenProjectRootDir<CR>
nnoremap <C-g>l :TigOpenCurrentFile<CR>
nnoremap <C-g>b :TigBlame<CR>
nnoremap <C-g>g :TigGrep<CR>
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
on_i = 1

[[plugins]]
repo = 'keith/investigate.vim'
on_map = ["gK"]
hook_source = '''
  let g:investigate_use_dash = 1
'''

[[plugins]]
repo = 'simnalamburt/vim-mundo'
on_i = 1

[[plugins]]
repo = 'tyru/open-browser.vim'
on_i = 1

[[plugins]]
repo = 'dracula/vim'
on_event = ['VimEnter']
hook_post_source = '''
  color dracula
'''

[[plugins]]
repo = 'haya14busa/vim-open-googletranslate'
on_event = ['OpenGoogleTranslate']
depends = 'open-browser.vim'
hook_add = '''
  let g:opengoogletranslate#default_lang = 'ja'
  noremap <C-t><C-t> :OpenGoogleTranslate --to=ja --from=en<CR>
'''
